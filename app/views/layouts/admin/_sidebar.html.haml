.pageslide-background{ "ng-click" => "sidebarClose()"}
	%pageslide.card{ "ps-open"=>"sidebar", "ps-auto-close" => true }
		.profile-menu.bgc-red-500
			.profile-pic
				= image_tag "#{(request.ssl? ? 'https://secure' : 'http://www')}.gravatar.com/avatar/#{Digest::MD5.hexdigest current_user.email}?s=60", class: "avatar"
			.profile-info
				= current_user.name
		%ul.pageslide-menu.collapsible{"data-collapsible" => "accordion"}
			- KepplerConfiguration.visible_models.each do |menu|
				- menu.each do |key, value|
					- unless menu[key]["submenu"] #ontetab sidebar link
						- if menu[key]["model"] #links with cancancan validate
							- if can?(:index, menu[key]["model"].constantize)
								%li
									= link_to menu[key]['url_path'], class: "collapsible-header #{'current' if menu[key]['current'].include?(controller_path)}" do
										%i.material-icons.mi.md-18= menu[key]["icon"]
										= t("keppler.menu.#{menu[key]['name']}")
						- else #links without cancancan validate
							%li
								= link_to menu[key]['url_path'], class: "collapsible-header #{'current' if menu[key]['current'].include?(controller_path)}" do
									%i.material-icons.mi.md-18= menu[key]["icon"]
									= t("keppler.menu.#{menu[key]['name']}")
					- else #tree sidebar links
						- if menu[key]["model"] && can?(:index, menu[key]["model"].constantize)
							%li
								.collapsable.collapsible-header{ class: "#{'active current' if menu[key]['current'].include?(controller_path)}" }
									%i.material-icons.mi.md-18= menu[key]['icon']
									= t("keppler.menu.#{menu[key]['name']}")
								.collapsible-body
									%ul.pageslide-sub-menu
										- menu[key]["submenu"].each do |submenu|
											- submenu.each do |name, val|
												%li
													- if settings_path?
														= link_to t("keppler.menu.#{menu[key]['name']}.submenu.#{submenu[name]['name']}"), submenu[name]['url_path'], class: "#{'current' if submenu[name]['current'].include?(@render)}"
													- else
														= link_to t("keppler.menu.#{menu[key]['name']}.submenu.#{submenu[name]['name']}"), submenu[name]['url_path'], class: "#{'current' if submenu[name]['current'].include?(controller_path)}"


